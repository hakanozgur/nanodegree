# generated by datamodel-codegen:
#   filename:  author.json
#   timestamp: 2021-02-28T17:56:01+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel


class UserIdentifier(BaseModel):
    Nick: Optional[str]
    Id: int


class Karma(BaseModel):
    Name: Optional[str]
    Value: int


class EntryCounts(BaseModel):
    Total: int
    LastMonth: int
    LastWeek: int
    Today: int


class UserInfo(BaseModel):
    UserIdentifier: UserIdentifier
    RemainingInvitation: int
    TwitterScreenName: Optional[str]
    FacebookProfileUrl: Optional[str]
    FacebookScreenName: Optional[str]
    InstagramScreenName: Optional[str]
    InstagramProfileUrl: Optional[str]
    Karma: Optional[Karma]
    EntryCounts: EntryCounts
    LastEntryDate: Optional[str]
    StandingQueueNumber: int
    HasAnyPendingInvitation: bool
    IsBuddy: bool
    IsBlocked: bool
    IsFollowed: bool
    IsCorporate: bool
    IsDeactivated: bool
    IsKarmaShown: bool
    IsCaylak: bool
    IsIndexTitlesBlocked: bool
    Note: Optional[str]
    CursePeriod: Optional[dict]
    IsCursed: bool
    IsBanned: bool
    DisplayTwitterProfile: bool
    DisplayFacebookProfile: bool
    DisplayInstagramProfile: bool


class Badge(BaseModel):
    Name: Optional[str]
    Description: Optional[str]


class Data(BaseModel):
    UserId: Optional[int]
    UserInfo: UserInfo
    Badges: Optional[List[Badge]]
    HasEntryUsedOnSeyler: bool
    FollowerCount: int
    FollowingsCount: int
    Picture: Optional[str]
    PinnedEntry: Optional[dict]
    FavoriteEntries: Optional[List]
    FavoritedEntries: Optional[List]


class Author(BaseModel):
    Success: bool
    Message: Optional[str]
    Data: Data
